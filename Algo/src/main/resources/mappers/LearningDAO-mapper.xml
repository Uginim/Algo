<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mappers.learningDAO-mapper">

	<!-- 과목목록 -->
	<!-- 1/전체목록 -->
	<select id="selectSubjectList" resultType="SubjectVO">
		select
		subject_num as "subjectNum",
		title,
		create_at as "createdAt",
		updated_at as "updatedAt",
		user_num as "userNum",
		image_data as
		"imageData"
		FROM(select row_number() over(order by
		subject_num desc) as
		num,
		subject_num,
		title,
		create_at,
		updated_at,
		user_num,
		image_data from
		subject
		<if test="searchType != null and keywords != null">
			where
			<foreach item="keyword" collection="keywords" open="("
				separator="or" close=")">
				<choose>
					<!-- 제목 -->
					<when test="searchType == 'T'.toString()">
						title like '%'||#{keyword}||'%'
					</when>
					<!-- 작성자 -->
					<when test="searchType == 'N'toString()">
						userNum like '%'||#{keyword}||'%'
					</when>
					<otherwise>
						title like '%'||#{keyword}||'%' or userNum like
						'%'||#{keyword}||'%'
					</otherwise>
				</choose>
			</foreach>
		</if>
		)
	</select>

	<!-- 총 레코드 수 -->
	<select id="countTotalRecord" parameterType="map"
		resultType="int">
		select count(subject.subject_num) as countTotal
		from subject
		<if test="searchType !=null and keywords !=null">
			where
			<foreach item="keyword" collection="keywords" open="("
				separator="or" close=")">
				<choose>
					<!-- 제목 -->
					<when test="searchType == 'T'.toString()">
						title like '%'||#{keyword}||'%'
					</when>
					<!-- 작성자 -->
					<when test="searchType == 'N'.toString()">
						userNum like '%'||#{keyword}||'%'
					</when>
					<otherwise>
						title like '%'||#{keyword}||'%' or userNum like
						'%'||#{keyword}||'%'
					</otherwise>
				</choose>
			</foreach>
		</if>




	</select>

	<select id="selectUnitList" resultType="UnitVO">
		select
		Unit_num as
		"unitNum",
		subject_num as "subjectNum",
		content,
		title,
		chapter_depth as
		"chapterDepth",
		created_at as "createdAt",
		updated_at as "updatedAt"
		from unit where subject_num like #{subjectNum}


	</select>

	<select id="selectOneUnit" resultType="UnitVO">
		select
		Unit_num as
		"unitNum",
		subject_num as "subjectNum",
		content,
		title,
		chapter_depth as
		"chapterDepth",
		created_at as "createdAt",
		updated_at
		as "updatedAt"
		from
		unit where unit_num like #{unitNum}


	</select>

	<!-- 마무리문제 불러오기 -->
	<!-- <select id="selectQuizList" resultType="QuizVO"> select quiz_num as 
		"quizNum", unit_num as "unitNum", title, content, correct_answer as "correcAnswer", 
		solution, created_at as "createdAt", updated_at as "updatedAt", user_num 
		as "userNum" from quiz where unit_num like #{unitNum} </select> -->

	<!-- 마무리문제 답안지 불러오기 -->
	
	<select id="selectQuizList" resultType="QuizVO" resultMap="QuizVOMap">

		select
		t1.quiz_num as "quizNum",
		t1.unit_num as "unitNum",
		t1.title,
		t1.content,
		t1.correct_answer as
		"correctAnswer",
		t1.solution,

		t1.user_num as "userNum",
		t2.answer_num as "answer.answerNum",
		t2.quiz_num as "answer.quizNum",
		t2.is_correct as "answer.isCorrect",
		t2.content as "answer.content"
		from quiz t1 left
		join quiz_answer t2
		on t1.quiz_num = t2.quiz_num
		where t1.unit_num like
		#{unitNum}

	</select>
	
	<resultMap type="QuizAnswerVO" id="QuizAnswerVO">
		<!-- <id property="answerNum" column="answerNum" /> -->
		<result column="answer.answerNum" property="answerNum" />
		<result column="answer.content" property="content" />
		<result column="answer.quizNum" property="quizNum" />
		


	</resultMap>
	<resultMap type="QuizVO" id="QuizVOMap">
		<result column="quizNum" property="quizNum" />
		<result column="title" property="title" />
		<result column="content" property="content" />
		<result column="correctAnswer" property="correctAnswer" />
		<result column="userNum" property="userNum" />
		<collection property="answerList" resultMap="QuizAnswerVO" />
	</resultMap>

	
























</mapper>